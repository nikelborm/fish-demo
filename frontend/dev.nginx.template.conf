upstream http_backend {
  server backend-dev:${INNER_BACKEND_HTTP_SERVER_PORT};
}

upstream ws_backend {
  server backend-dev:${INNER_BACKEND_WS_SERVER_PORT};
}

upstream pgadmin_front {
  server 10.5.0.3:80;
}

upstream dev_front {
  # frontend-dev was replaced to 10.5.0.3 to make it easier to disable existing check of frontend-dev container
  # It is needed for team to develop backend without taking RAM for react dev server
  # in future it should be few different docker compose files. One with built back, one with built front, one with both live servers
  # server 10.5.0.3:${INNER_DEV_FRONT_LIVE_RELOAD_SERVER_PORT};
  server frontend-dev:${INNER_DEV_FRONT_LIVE_RELOAD_SERVER_PORT};
}

#upstream cv_webrtc_service {
#  server cv_webrtc_service-dev:8080;
#}

map $http_upgrade $connection_upgrade {
  default upgrade;
  '' close;
}

server {

  listen ${INNER_NGINX_HTTP_PORT};

  proxy_read_timeout 60;
  proxy_connect_timeout 60;
  proxy_send_timeout 60;

  server_name nginx-dev www.nginx-dev;

  gzip on;
  gzip_disable "msie6";

  gzip_vary on;
  gzip_proxied any;
  gzip_comp_level 6;
  gzip_buffers 16 8k;
  gzip_http_version 1.1;
  gzip_min_length 0;
  gzip_types text/plain application/javascript text/css text/xml application/xml application/xml+rss text/javascript application/vnd.ms-fontobject application/x-font-ttf font/opentype;

  location = /pgadmin {
    proxy_set_header X-Script-Name /pgadmin/;
    proxy_set_header Host $host;
    proxy_pass http://pgadmin_front/;
  }

  location = /pgadmin/ {
    proxy_set_header X-Script-Name /pgadmin/;
    proxy_set_header Host $host;
    proxy_pass http://pgadmin_front/;
  }

  rewrite "^(/pgadmin){2,}(.*)$" http://$host:${EXTERNAL_NGINX_HTTP_PORT}/pgadmin$2 permanent;

  location ~ /pgadmin/(.*) {
    proxy_set_header X-Script-Name /pgadmin/;
    proxy_set_header Host $host;
    proxy_pass http://pgadmin_front/$1;
    proxy_redirect ~^/(.*)$ http://$host:${EXTERNAL_NGINX_HTTP_PORT}/pgadmin/$1;
  }

  location /api {
    proxy_pass http://http_backend;
    proxy_redirect off;
  }

  #location ~ /rtc/(.*) {
  #  proxy_set_header Host $host;
  #  proxy_pass http://cv_webrtc_service/$1;
  #}

  location ~ /docs(.*) {
    proxy_set_header X-Script-Name /api/docs;
    proxy_set_header Host $host;
    proxy_pass http://http_backend/api/docs$1;
    proxy_redirect ~^/(.*)$ http://$host:${EXTERNAL_NGINX_HTTP_PORT}/api/docs$1;
  }

  location /api/ws {
    proxy_pass http://ws_backend;

    proxy_redirect off;
    # proxy_protocol on;
    proxy_set_header X-Real-IP  $remote_addr;
    proxy_set_header X-Forwarded-For $remote_addr;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host $host;
  }

  location /ws {
    proxy_pass http://dev_front;

    proxy_redirect off;
    # proxy_protocol on;
    proxy_set_header X-Real-IP  $remote_addr;
    proxy_set_header X-Forwarded-For $remote_addr;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_set_header Host $host;
  }

  location / {
    proxy_pass http://dev_front;
    proxy_redirect off;
  }
}
